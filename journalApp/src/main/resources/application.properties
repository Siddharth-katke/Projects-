#we can use command in console for giving the properties or yml file or .properties file
#1st priority given to command 2nd to .properties and 3rd to yml
spring.application.name=Journal App
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=journaldb
spring.data.mongodb.auto-index-creation=true
spring.main.allow-circular-references=true
weather.api.key= 59ba8f6ded934c15b9a155428241807
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=sunnykatke88@gmail.com
spring.mail.password=wuigvkunflgwqvpf
#if the app needs authorization then we need to add auth=true
spring.mail.properties.mail.smtp.auth=true
#if you want to make the Data transferred between server and application encrypted then starttls.enable=true tls-transport layer security
spring.mail.properties.mail.smtp.starttls.enable=true
spring.redis.host:localhost
spring.redis.port:6379

spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Ensures that the consumer starts from the beginning if no offset is found
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.consumer.group-id=weekly-sentiment-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.project.journalApp.model

spring.kafka.properties.session.timeout.ms=45000
